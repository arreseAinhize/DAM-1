
El paquete **`math.h`** en C contiene una colección de funciones matemáticas que permiten realizar operaciones matemáticas comunes, como cálculos trigonométricos, logarítmicos, exponenciales y más. A continuación, se describen algunas de las funciones más comunes que se pueden encontrar en **`math.h`**:

### 1. **Funciones trigonométricas**:
   Estas funciones operan en radianes.
   
   - **`sin()`**: Calcula el seno de un ángulo en radianes.
     - Ejemplo:
       ```c
       double resultado = sin(3.1416 / 2); // Resultado: 1
       ```
   
   - **`cos()`**: Calcula el coseno de un ángulo en radianes.
     - Ejemplo:
       ```c
       double resultado = cos(0); // Resultado: 1
       ```
   
   - **`tan()`**: Calcula la tangente de un ángulo en radianes.
     - Ejemplo:
       ```c
       double resultado = tan(3.1416 / 4); // Resultado: 1
       ```
   
   - **`asin()`**: Calcula el arco seno (inverso del seno) en radianes.
     - Ejemplo:
       ```c
       double resultado = asin(1); // Resultado: π/2 (1.5708 rad)
       ```
   
   - **`acos()`**: Calcula el arco coseno (inverso del coseno) en radianes.
     - Ejemplo:
       ```c
       double resultado = acos(1); // Resultado: 0
       ```
   
   - **`atan()`**: Calcula el arco tangente (inverso de la tangente) en radianes.
     - Ejemplo:
       ```c
       double resultado = atan(1); // Resultado: π/4 (0.7854 rad)
       ```

### 2. **Funciones exponenciales y logarítmicas**:
   - **`exp()`**: Calcula el valor de e elevado a la potencia especificada.
     - Ejemplo:
       ```c
       double resultado = exp(1); // Resultado: e (2.71828)
       ```
   
   - **`log()`**: Calcula el logaritmo natural (base e) de un número.
     - Ejemplo:
       ```c
       double resultado = log(2.71828); // Resultado: 1
       ```
   
   - **`log10()`**: Calcula el logaritmo base 10 de un número.
     - Ejemplo:
       ```c
       double resultado = log10(100); // Resultado: 2
       ```
   
   - **`pow()`**: Calcula la potencia de un número dado (base^exponente).
     - Ejemplo:
       ```c
       double resultado = pow(2, 3); // Resultado: 8
       ```

### 3. **Funciones de raíz y valor absoluto**:
   - **`sqrt()`**: Calcula la raíz cuadrada de un número.
     - Ejemplo:
       ```c
       double resultado = sqrt(16); // Resultado: 4
       ```
   
   - **`cbrt()`**: Calcula la raíz cúbica de un número.
     - Ejemplo:
       ```c
       double resultado = cbrt(27); // Resultado: 3
       ```
   
   - **`fabs()`**: Devuelve el valor absoluto de un número en punto flotante.
     - Ejemplo:
       ```c
       double resultado = fabs(-5.3); // Resultado: 5.3
       ```

### 4. **Funciones de redondeo**:
   - **`ceil()`**: Redondea hacia arriba al entero más cercano.
     - Ejemplo:
       ```c
       double resultado = ceil(3.7); // Resultado: 4
       ```
   
   - **`floor()`**: Redondea hacia abajo al entero más cercano.
     - Ejemplo:
       ```c
       double resultado = floor(3.7); // Resultado: 3
       ```
   
   - **`round()`**: Redondea un número al entero más cercano.
     - Ejemplo:
       ```c
       double resultado = round(3.5); // Resultado: 4
       ```

### 5. **Funciones hiperbólicas**:
   - **`sinh()`**: Calcula el seno hiperbólico.
     - Ejemplo:
       ```c
       double resultado = sinh(1); // Resultado: 1.175201
       ```
   
   - **`cosh()`**: Calcula el coseno hiperbólico.
     - Ejemplo:
       ```c
       double resultado = cosh(1); // Resultado: 1.543081
       ```
   
   - **`tanh()`**: Calcula la tangente hiperbólica.
     - Ejemplo:
       ```c
       double resultado = tanh(1); // Resultado: 0.761594
       ```

### 6. **Funciones de manipulación de números enteros**:
   - **`fmod()`**: Calcula el resto de la división de dos números en punto flotante.
     - Ejemplo:
       ```c
       double resultado = fmod(5.3, 2); // Resultado: 1.3
       ```
   
   - **`modf()`**: Descompone un número en su parte entera y fraccionaria.
     - Ejemplo:
       ```c
       double parte_entera, parte_fraccionaria;
       parte_fraccionaria = modf(3.14, &parte_entera); // Resultado: parte_entera=3, parte_fraccionaria=0.14
       ```

### Resumen:
El paquete `math.h` contiene funciones matemáticas que permiten realizar una amplia gama de operaciones, como trigonometría, exponenciales, logaritmos, potencias, redondeo y más. Es fundamental incluir este encabezado al trabajar con funciones matemáticas en C.
